{% extends 'admin/layout' %}
{% block css %}

{% endblock css %}

{% block title %}
友链管理
{% endblock title %}

{% block content %}
<v-data-table :headers="headers" :items="desserts" sort-by="calories" class="elevation-1">
    <template v-slot:top>
        <v-toolbar flat color="white">
            <v-toolbar-title>友链管理</v-toolbar-title>
            <v-divider class="mx-4" inset vertical></v-divider>
            <v-spacer></v-spacer>
            <v-dialog v-model="editDialog" max-width="500px">
                <v-card>
                    <v-card-title>
                        <span class="headline">{[formTitle]} </span>
                    </v-card-title>

                    <v-card-text>
                        <v-container>
                            <v-row>
                                <v-col cols="12">
                                    <v-text-field v-model="editItemData.name" label="博客名称" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="editItemData.link" label="网址" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="editItemData.avatar" label="头像" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="editItemData.brief" label="简介" single-line>
                                    </v-text-field>
                                </v-col>
                            </v-row>
                        </v-container>
                    </v-card-text>

                    <v-card-actions>
                        <v-spacer></v-spacer>
                        <v-btn color="blue darken-1" text @click="editDialog=!editDialog">取消</v-btn>
                        <v-btn color="blue darken-1" text @click="putEditItem();editDialog=!editDialog">修改
                        </v-btn>
                    </v-card-actions>
                </v-card>
            </v-dialog>
            <v-dialog v-model="dialog" max-width="500px">
                <template v-slot:activator="{ on, attrs }">
                    <v-btn color="primary" @click="postStatus()" dark class="mb-2" v-bind="attrs" v-on="on">添加友链</v-btn>
                </template>
                <v-card>
                    <v-card-title>
                        <span class="headline"> {[formTitle ]}</span>
                    </v-card-title>

                    <v-card-text>
                        <v-container>
                            <v-row>
                                <v-col cols="12">
                                    <v-text-field v-model="blogData.name" label="博客名称" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="blogData.link" label="网址" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="blogData.avatar" label="头像" single-line>
                                    </v-text-field>
                                </v-col>
                                <v-col cols="12">
                                    <v-text-field v-model="blogData.brief" label="简介" single-line>
                                    </v-text-field>
                                </v-col>
                            </v-row>
                        </v-container>
                    </v-card-text>

                    <v-card-actions>
                        <v-spacer></v-spacer>
                        <v-btn color="blue darken-1" text @click="close">取消</v-btn>
                        <v-btn color="blue darken-1" text @click="save">保存</v-btn>
                    </v-card-actions>
                </v-card>
            </v-dialog>
        </v-toolbar>
    </template>
    <template v-slot:item.actions="{ item }">
        <v-icon small class="mr-2" @click="editItem(item);editDialog=!editDialog">
            mdi-pencil
        </v-icon>
        <v-icon small @click="deleteItem(item)">
            mdi-delete
        </v-icon>
    </template>

</v-data-table>

<div class="text-center">

    <v-snackbar v-model="snackbar" :timeout="timeout" top right :color='snackBarColor'>
        {[ snackBarText ]}

    </v-snackbar>
</div>

{% endblock content %}

{% block js %}


<script>
    new Vue({
        delimiters: ['{[', ']}'],
        el: '#app',
        vuetify: new Vuetify(),
        data: () => ({
            csrftoken: "{{csrf_token | safe}}",
            drawer: false,
            dialog: false,
            editDialog: false,
            editItemData: {},
            blogData: {
                name: "",
                link: "",
                avatar: "",
                brief: ""
            },
            headers: [{
                text: '日期',
                align: 'start',
                value: 'created',
            }, {
                text: '博客名称',
                align: 'start',
                sortable: false,
                value: 'name',
            },
            {
                text: '网址',
                value: 'link'
            },
            {
                text: '头像',
                value: 'avatar'
            },
            {
                text: '简介',
                value: 'brief'
            },
            {
                text: '操作',
                value: 'actions',
                sortable: false
            },
            ],
            desserts: [],
            editedIndex: -1,
            snackbar: false,
            snackBarText: '',
            timeout: 1500,
            snackBarColor: '',
        }),

        computed: {
            formTitle() {
                return this.editedIndex === -1 ? '添加友链' : '编辑友链'
            },
        },
        mounted() {
            this.getLinkData()
        },
        watch: {
            dialog(val) {
                val || this.close()
            },
        },

        created() {

        },

        methods: {
            postStatus(){
                this.editedIndex =-1;
            },
            editItem(item) {
                this.editedIndex =0;
                this.editItemData = item
            },
            getLinkData() {
                axios.get('/api/admin/link/all', {
                    headers: {
                        'X-CSRFToken': this.csrftoken,
                    }
                }).then(
                    res => {
                        console.log(res);
                        this.desserts = res.data.data
                    }
                )
            },
            putEditItem() {
                axios.put('/api/admin/link', this.editItemData, {
                    headers: {
                        'X-CSRFToken': this.csrftoken,
                    },
                }).then(res => {
                    this.snackbar = true
                    this.snackBarText = res.data.message
                    this.snackBarColor = res.data.status
                    this.getLinkData()
                });

            },
            deleteItem(item) {
                let r = confirm('你确定要删除?')
                if (r) {
                    axios.delete('/api/admin/link', {
                        data: item,
                        headers: {
                            'X-CSRFToken': this.csrftoken,
                        },
                    }).then(res => {
                        this.snackbar = true
                        this.snackBarText = res.data.message
                        this.snackBarColor = res.data.status
                        this.getLinkData()
                    });
                }
            },

            close() {
                this.dialog = false
                this.$nextTick(() => {
                    this.editedItem = Object.assign({}, this.defaultItem)
                    this.editedIndex = -1
                })
            },

            save() {
                axios.post('/api/admin/link', this.blogData, {
                    headers: {
                        'X-CSRFToken': this.csrftoken,
                    },
                }).then(res => {
                    this.snackbar = true
                    this.snackBarText = res.data.message
                    this.snackBarColor = res.data.status
                    this.getLinkData()
                });
                this.close()
            },
        }
    })
</script>
{% endblock js %}